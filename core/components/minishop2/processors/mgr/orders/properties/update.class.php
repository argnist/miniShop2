<?php

class msOrderPropertiesUpdateProcessor extends modObjectUpdateProcessor {
	public $classKey = 'msOrderProperties';
	public $languageTopics = array('minishop2');
	public $permission = 'msorder_save';

	/** {@inheritDoc} */
	public function initialize() {
		if (!$this->modx->hasPermission($this->permission)) {
			return $this->modx->lexicon('access_denied');
		}
		return parent::initialize();
	}

    public function afterSave()
    {
        $type = $this->getProperty('type');
        $orderPropertiesTypes = $this->modx->fromJSON($this->modx->getOption('ms_order_properties_types'));

        foreach($orderPropertiesTypes as $orderPropertiesType){
            if($type==$orderPropertiesType['type']){
                if(!isset($orderPropertiesType['variants']) || $orderPropertiesType['variants']==0){

                    $this->modx->removeCollection('msOrderPropertiesVariants', array(
                        "order_property_id"=> $this->getProperty('id')
                    ));

                    break;
                }
            }
        }


        $deliveries = $this->object->getMany('Deliveries');
        $deliveryIds = array();
        foreach($deliveries as $delivery){
            $deliveryIds[] =  $delivery->delivery_id;
        }
        if(array_diff($this->getProperty('delivery'),$deliveryIds) || array_diff($deliveryIds,$this->getProperty('delivery'))){
            $this->modx->removeCollection('msOrderPropertiesDeliveries',array(
                'property_id' => $this->object->get('id')
            ));

            foreach($this->getProperty('delivery') as $deliveryId){
                if($deliveryId){
                    $rel = $this->modx->newObject('msOrderPropertiesDeliveries');
                    $rel->set('property_id',$this->object->get('id'));
                    $rel->set('delivery_id',$deliveryId);
                    $rel->save();
                }
            }
        }


        $payments = $this->object->getMany('Payments');
        $paymentIds = array();
        foreach($payments as $payment){
            $paymentIds[] =  $payment->payment_id;
        }
        if(array_diff($this->getProperty('payment'),$paymentIds) || array_diff($paymentIds,$this->getProperty('payment'))){
            $this->modx->removeCollection('msOrderPropertiesPayments',array(
                'property_id' => $this->object->get('id')
            ));

            foreach($this->getProperty('payment') as $paymentId){
                if($paymentId){
                    $rel = $this->modx->newObject('msOrderPropertiesPayments');
                    $rel->set('property_id',$this->object->get('id'));
                    $rel->set('payment_id',$paymentId);
                    $rel->save();
                }
            }
        }

        $this->object->generateLexiconEntry();

        return parent::afterSave(); // TODO: Change the autogenerated stub
    }

}

return 'msOrderPropertiesUpdateProcessor';